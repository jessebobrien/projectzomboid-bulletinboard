name: Release

on:
  push:
    branches:
      - master

jobs:
  bump-version-and-release:
    name: Bump version & Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: true

      - name: Set up Git user
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"

      - name: Bump version in mod.info
        id: bump
        run: |
          VERSION=$(grep '^version=' mod.info | cut -d'=' -f2)
          IFS='.' read -r MAJ MIN PATCH <<< "$VERSION"
          NEWPATCH=$((PATCH+1))
          NEWVERSION="$MAJ.$MIN.$NEWPATCH"
          echo "New version: $NEWVERSION"
          sed -i "s/^version=.*/version=$NEWVERSION/" mod.info
          git add mod.info
          echo "new_version=$NEWVERSION" >> $GITHUB_OUTPUT

      - name: Commit and tag
        run: |
          git commit -m "Bump version to ${{ steps.bump.outputs.new_version }}"
          git tag v${{ steps.bump.outputs.new_version }}
          git push origin master --tags

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ steps.bump.outputs.new_version }}
          release_name: v${{ steps.bump.outputs.new_version }}
          draft: false
          prerelease: false

      - name: Notify Discord via webhook
        if: success()
        env:
          WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          curl -H "Content-Type: application/json" \
            -d '{"content":":tada: New release v${{ steps.bump.outputs.new_version }} is available!\nhttps://github.com/${{ github.repository }}/releases/tag/v${{ steps.bump.outputs.new_version }}"}' \
            "$WEBHOOK_URL"
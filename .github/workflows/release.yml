name: Release

on:
  pull_request:
    branches:
      - master
    types:
      - closed

permissions:
  contents: write

jobs:
  publish:
    if: ${{ github.event.pull_request.merged == true }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Bump version
        id: bump
        run: |
          VER=$(grep '^version=' mod.info | cut -d'=' -f2)
          IFS='.' read -r MAJ MIN PATCH <<< "$VER"
          PATCH=$((PATCH+1))
          NEW="$MAJ.$MIN.$PATCH"
          echo "new_version=$NEW" >> $GITHUB_OUTPUT
          sed -i "s/^version=.*/version=$NEW/" mod.info

      - name: Commit, Tag & Push
        run: |
          git config user.name github-actions
          git config user.email actions@github.com
          git add mod.info
          git commit -m "Release v${{ steps.bump.outputs.new_version }}"
          git tag "v${{ steps.bump.outputs.new_version }}"
          git push origin master --tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.bump.outputs.new_version }}
          name: v${{ steps.bump.outputs.new_version }}

      - name: Upload to Steam Workshop
        run: |
          cat <<EOF > workshop.vdf
"workshopitem"
{
  "appid"            "${{ secrets.STEAM_APP_ID }}"
  "contentfolder"    "${{ github.workspace }}"
  "previewfile"      "poster.png"
  "visibility"       "0"
  "changenote"       "Release v${{ steps.bump.outputs.new_version }}"
  "publishedfileid"  "${{ secrets.STEAM_WORKSHOP_ITEM_ID }}"
}
EOF
          docker run --rm \
            -v "${{ github.workspace }}:/workspace" \
            -w /workspace \
            cm2network/steamcmd:latest \
            steamcmd.sh +login "${{ secrets.STEAM_USERNAME }}" "${{ secrets.STEAM_PASSWORD }}" \
            +workshop_build_item /workspace/workshop.vdf \
            +quit

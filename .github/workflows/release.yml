name: Release

permissions:
  contents: write

on:
  pull_request:
    branches: [master]
    types: [closed]

jobs:
  bump-version-and-release:
    if: github.event.pull_request.merged == true
    name: Bump version & Create Release
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.bump.outputs.new_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Configure Git
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"

      - name: Bump version in mod.info
        id: bump
        run: |
          BUMP_TYPE=""
          if git log -1 --pretty=%B | grep -iq "#major"; then
            BUMP_TYPE=major
          elif git log -1 --pretty=%B | grep -iq "#minor"; then
            BUMP_TYPE=minor
          else
            BUMP_TYPE=patch
          fi
          VERSION=$(grep '^version=' mod.info | cut -d'=' -f2)
          IFS='.' read -r MAJ MIN PATCH <<< "$VERSION"
          case "$BUMP_TYPE" in
            major) MAJ=$((MAJ+1)); MIN=0; PATCH=0;;
            minor) MIN=$((MIN+1)); PATCH=0;;
            *) PATCH=$((PATCH+1));;
          esac
          NEW_VERSION="$MAJ.$MIN.$PATCH"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          sed -i "s/^version=.*/version=$NEW_VERSION/" mod.info
          git add mod.info

      - name: Commit and Tag
        run: |
          git commit -m "Bump version to ${{ steps.bump.outputs.new_version }}"
          git tag "v${{ steps.bump.outputs.new_version }}"

      - name: Push tags
        run: git push origin master --tags

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.bump.outputs.new_version }}
          name: v${{ steps.bump.outputs.new_version }}
          draft: false
          prerelease: false
